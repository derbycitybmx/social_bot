name: Docker Image CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_TAG: latest
  DOCKERFILE_PATH: Dockerfile
  KANIKO_EXTRA_ARGS: "--build-arg SLACK_BOT_TOKEN=$(grep SLACK_BOT_TOKEN .env | cut -d '=' -f2) --build-arg SLACK_SIGNING_SECRET=$(grep SLACK_SIGNING_SECRET .env | cut -d '=' -f2)"
  AWS_REGION: us-east-1

jobs:
  ecr_repo_create_base:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Check if ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names ${{ env.IMAGE_NAME }} || aws ecr create-repository --repository-name ${{ env.IMAGE_NAME }} --image-scanning-configuration scanOnPush=true --region ${{ env.AWS_REGION }}

  ecr_publish_image_base:
    needs: ecr_repo_create_base
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ${{ env.DOCKERFILE_PATH }}
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}